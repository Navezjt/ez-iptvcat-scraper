nombre: Scrape Cron

en:
  workflow_dispatch:
  Horario:
    - cron: "0 12 * * *"

Puestos de trabajo:
  Construir:
    nombre: Scrape Cron
    Se ejecuta: ubuntu-latest
    Pasos:
      - name: Obtener la fecha actual
        ID: Fecha
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Configurar Go 1.x
        Usos: Acciones/Setup-go@v3
        con:
          Versión: ^1.13
        ID: Ir

      - name: Código de pago
        Usos: Acciones/checkout@v3

      - name: Obtener dependencias
        Ejecutar: |
 ve a buscar -v -t -d ./...
 if [ -f Gopkg.toml ]; entonces
 https://raw.githubusercontent.com/golang/dep/master/install.sh rizos | Sh
 Garantía de DEP
 Fi
      - Nombre: Ejecutar
        Ejecutar: Ir a correr .

      - name: Archivos de confirmación
        Ejecutar: |
          git config --local user.email "seonavez@gmail.com"
          git config --local user.name "@Navezjt"
          git add data/*
 git commit -m "cron: nuevos datos" -a
      - name: Cambios de inserción
        Usos: ad-m/github-push-action@master
        con:
          github_token: ${{ secretos. GITHUB_TOKEN }}

      - nombre: Artefacto zip
        Ejecutar: |
 zip --junk-paths -r transmite datos
      - name: Crear versión
        Identificación: create_release
        Usos: Acciones/Crear-release@v1
        env:
          GITHUB_TOKEN: ${{ secretos. GITHUB_TOKEN }}
        con:
          tag_name: ${{ steps.date.outputs.date }}
          release_name: Liberar ${{ steps.date.outputs.date }}
          Borrador: Falso
          Presentación: Falso

      - name: Cargar recurso de versión
        ID: upload-release-asset
        Usos: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secretos. GITHUB_TOKEN }}
        con:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./streams.zip
          asset_name: Arroyos.zip
          asset_content_type: solicitud/zip
